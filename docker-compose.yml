services:
  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stock_insights_backend
    env_file:
      - ${ENV_FILE:-.env.local}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - web
      - all

  # Angular Frontend (Shared for Django & Airflow)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      target: ${NODE_ENV:-development}
    container_name: stock_insights_frontend
    env_file:
      - ${ENV_FILE:-.env.local}
    ports:
      - "${FRONTEND_PORT:-4200}:4200"
    depends_on:
      - backend
    profiles:
      - web
      - all

  # PostgreSQL
  postgres:
    image: postgres:alpine
    container_name: stock_insights_postgres
    env_file:
      - ${ENV_FILE:-.env.local}
    volumes:
      - postgres-data:/var/lib/postgresql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      retries: 5
    restart: always
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    profiles:
      - analytics
      - web
      - all

  # MinIO (Local S3)
  minio:
    image: minio/minio
    container_name: stock_insights_minio
    env_file:
      - ${ENV_FILE:-.env.local}
    ports:
      - "${MINIO_API_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    profiles:
      - analytics
      - all

  # Airflow (Combined webserver and scheduler)
  airflow:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    container_name: stock_insights_airflow
    env_file:
      - ${ENV_FILE:-.env.local}
    ports:
      - "${AIRFLOW_WEBSERVER_PORT}:8080"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - analytics
      - all

volumes:
  postgres-data:
    name: postgres-data
  minio-data:
    name: minio-data
